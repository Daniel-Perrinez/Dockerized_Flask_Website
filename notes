# Create flask website https://www.youtube.com/watch?v=mgwo8fq-SkA
# Deploy flask to eks https://www.youtube.com/watch?v=c4WcYjama6U
# https://medium.com/@sejalmaniyar9/deploying-a-docker-image-to-aws-eks-504f4fec6fee


# Local testing
# ---------------
python3.11 -m pip install --upgrade pip
python app.py


# Harbor
# ---------------
docker login demo.goharbor.io --username <> --password ""
docker push demo.goharbor.io/weiharbor/demoflask:0.0.1.RELEASE

# Docker Hub
# ---------------
docker login --username <> --password ""
docker push docker.io/danielperrinez/flask_website:0.0.1.RELEASE


# Test
# ---------------
# Build for AWS EKS
docker buildx build --platform linux/amd64 --iidfile docker_image_id.txt -t danielperrinez/flask_website:0.0.1.RELEASE .
docker container run -d -p 5000:5000 --name my-flask danielperrinez/flask_website:0.0.1.RELEASE

docker ps
docker ps -a
docker rm 988b2959f1b7

echo "${${$(<docker_image_id.txt)#sha256:}:0:12}"
docker images -q | grep -wq "988b2959f1b7";

# Deploy
# ---------------
helm install danp-helm helm

helm list                  
helm uninstall danp-helm
helm status danp-helm
helm list



kubectl apply -f helm/templates/namespace.yaml
kubectl apply -f helm/templates/deployment.yaml




kubectl run flask-website --image=danielperrinez/flask_website:0.0.1.RELEASE
    # -- If the docker image was build on Mac the pod may show an error "exec /docker-entrypoint.sh: exec format error" --> https://stackoverflow.com/questions/72042794/when-creating-pod-it-go-into-crashloopbackoff-logs-show-exec-usr-local-bin-do
Kubectl get pod
kubectl expose pod flask-website --name=flask-website-svc --port=80
kubectl get svc


kubectl port-forward flask-deployment-986d8966-kl7wp 8080:80
kubectl port-forward service/flask-website-svc 8080:80


docker buildx build --platform linux/amd64 -t danielperrinez/flask_website:0.0.1.RELEASE .
docker container run -d -p 8000:80 --name my-flask danielperrinez/flask_website:0.0.1.RELEASE
docker push docker.io/danielperrinez/flask_website:0.0.1.RELEASE
kubectl delete deployment flask-deployment -n default
kubectl apply -f deployment.yaml


# Docker Build and Push without using the marketplace workflows.
# ----------------------------------------------------------------------------------------------------------------------------
# - name: Docker Build
#   run: |
#     docker_tag=0.0.1.RELEASE
#     docker_repo=danielperrinez/flask_website
#     echo "docker_tag == $docker_tag"
#     echo "docker_repo == $docker_repo"
#     if [ -f "Dockerfile" ]; then
#       echo "Dockerfile exists"
#       docker buildx build --platform linux/amd64 --iidfile docker_image_id.txt -t ${docker_repo}:${docker_tag} .
#         # If you get a 503 error check --> https://www.dockerstatus.com
#     else
#       echo "File does not exist"
#       # exit 1;
#     fi

# - name: Docker push
# if: ${{ success() }}
# run: | 
#   docker_image_id=$(echo $(<docker_image_id.txt)|cut -c8-19)
#   echo "docker_image_id == $docker_image_id"
#   # Check for the existence of a specific Docker image ID
#   if docker images -q | grep -wq $docker_image_id; then
#     echo "The Docker image ID exists locally"
#     docker push docker.io/${docker_repo}:${docker_tag}
#   else
#     echo "The Docker image ID does not exist locally"
#     exit 1;
#   fi